// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package protobuf;

public final class Message {
  private Message() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface msgcharinfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 uaid = 1;
    /**
     * <code>optional uint32 uaid = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    boolean hasUaid();
    /**
     * <code>optional uint32 uaid = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    int getUaid();

    // optional uint32 charid = 2;
    /**
     * <code>optional uint32 charid = 2;</code>
     *
     * <pre>
     *角色id
     * </pre>
     */
    boolean hasCharid();
    /**
     * <code>optional uint32 charid = 2;</code>
     *
     * <pre>
     *角色id
     * </pre>
     */
    int getCharid();

    // optional uint32 kind = 3;
    /**
     * <code>optional uint32 kind = 3;</code>
     *
     * <pre>
     *角色种类
     * </pre>
     */
    boolean hasKind();
    /**
     * <code>optional uint32 kind = 3;</code>
     *
     * <pre>
     *角色种类
     * </pre>
     */
    int getKind();

    // optional string name = 4;
    /**
     * <code>optional string name = 4;</code>
     *
     * <pre>
     *角色名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 4;</code>
     *
     * <pre>
     *角色名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 4;</code>
     *
     * <pre>
     *角色名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional string head = 5;
    /**
     * <code>optional string head = 5;</code>
     *
     * <pre>
     *头像id
     * </pre>
     */
    boolean hasHead();
    /**
     * <code>optional string head = 5;</code>
     *
     * <pre>
     *头像id
     * </pre>
     */
    java.lang.String getHead();
    /**
     * <code>optional string head = 5;</code>
     *
     * <pre>
     *头像id
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadBytes();

    // optional uint32 level = 6;
    /**
     * <code>optional uint32 level = 6;</code>
     *
     * <pre>
     *角色等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional uint32 level = 6;</code>
     *
     * <pre>
     *角色等级
     * </pre>
     */
    int getLevel();

    // optional uint32 exp = 7;
    /**
     * <code>optional uint32 exp = 7;</code>
     *
     * <pre>
     *角色经验
     * </pre>
     */
    boolean hasExp();
    /**
     * <code>optional uint32 exp = 7;</code>
     *
     * <pre>
     *角色经验
     * </pre>
     */
    int getExp();

    // optional uint32 phypower = 8;
    /**
     * <code>optional uint32 phypower = 8;</code>
     *
     * <pre>
     *物理攻击
     * </pre>
     */
    boolean hasPhypower();
    /**
     * <code>optional uint32 phypower = 8;</code>
     *
     * <pre>
     *物理攻击
     * </pre>
     */
    int getPhypower();

    // optional uint32 leadership = 9;
    /**
     * <code>optional uint32 leadership = 9;</code>
     *
     * <pre>
     *领导标记
     * </pre>
     */
    boolean hasLeadership();
    /**
     * <code>optional uint32 leadership = 9;</code>
     *
     * <pre>
     *领导标记
     * </pre>
     */
    int getLeadership();

    // optional uint32 friendnum = 10;
    /**
     * <code>optional uint32 friendnum = 10;</code>
     *
     * <pre>
     *朋友数量
     * </pre>
     */
    boolean hasFriendnum();
    /**
     * <code>optional uint32 friendnum = 10;</code>
     *
     * <pre>
     *朋友数量
     * </pre>
     */
    int getFriendnum();

    // optional uint32 gamecoin = 11;
    /**
     * <code>optional uint32 gamecoin = 11;</code>
     *
     * <pre>
     *游戏货币
     * </pre>
     */
    boolean hasGamecoin();
    /**
     * <code>optional uint32 gamecoin = 11;</code>
     *
     * <pre>
     *游戏货币
     * </pre>
     */
    int getGamecoin();

    // optional uint32 diamond = 12;
    /**
     * <code>optional uint32 diamond = 12;</code>
     *
     * <pre>
     *钻石数量
     * </pre>
     */
    boolean hasDiamond();
    /**
     * <code>optional uint32 diamond = 12;</code>
     *
     * <pre>
     *钻石数量
     * </pre>
     */
    int getDiamond();
  }
  /**
   * Protobuf type {@code msgcharinfo}
   *
   * <pre>
   *角色信息结构
   * </pre>
   */
  public static final class msgcharinfo extends
      com.google.protobuf.GeneratedMessage
      implements msgcharinfoOrBuilder {
    // Use msgcharinfo.newBuilder() to construct.
    private msgcharinfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msgcharinfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msgcharinfo defaultInstance;
    public static msgcharinfo getDefaultInstance() {
      return defaultInstance;
    }

    public msgcharinfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msgcharinfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uaid_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              charid_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              kind_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              name_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              head_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              level_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              exp_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              phypower_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              leadership_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              friendnum_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              gamecoin_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              diamond_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.Message.internal_static_msgcharinfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.Message.internal_static_msgcharinfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.Message.msgcharinfo.class, protobuf.Message.msgcharinfo.Builder.class);
    }

    public static com.google.protobuf.Parser<msgcharinfo> PARSER =
        new com.google.protobuf.AbstractParser<msgcharinfo>() {
      public msgcharinfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msgcharinfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msgcharinfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 uaid = 1;
    public static final int UAID_FIELD_NUMBER = 1;
    private int uaid_;
    /**
     * <code>optional uint32 uaid = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    public boolean hasUaid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 uaid = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    public int getUaid() {
      return uaid_;
    }

    // optional uint32 charid = 2;
    public static final int CHARID_FIELD_NUMBER = 2;
    private int charid_;
    /**
     * <code>optional uint32 charid = 2;</code>
     *
     * <pre>
     *角色id
     * </pre>
     */
    public boolean hasCharid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 charid = 2;</code>
     *
     * <pre>
     *角色id
     * </pre>
     */
    public int getCharid() {
      return charid_;
    }

    // optional uint32 kind = 3;
    public static final int KIND_FIELD_NUMBER = 3;
    private int kind_;
    /**
     * <code>optional uint32 kind = 3;</code>
     *
     * <pre>
     *角色种类
     * </pre>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 kind = 3;</code>
     *
     * <pre>
     *角色种类
     * </pre>
     */
    public int getKind() {
      return kind_;
    }

    // optional string name = 4;
    public static final int NAME_FIELD_NUMBER = 4;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 4;</code>
     *
     * <pre>
     *角色名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string name = 4;</code>
     *
     * <pre>
     *角色名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 4;</code>
     *
     * <pre>
     *角色名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string head = 5;
    public static final int HEAD_FIELD_NUMBER = 5;
    private java.lang.Object head_;
    /**
     * <code>optional string head = 5;</code>
     *
     * <pre>
     *头像id
     * </pre>
     */
    public boolean hasHead() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string head = 5;</code>
     *
     * <pre>
     *头像id
     * </pre>
     */
    public java.lang.String getHead() {
      java.lang.Object ref = head_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          head_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string head = 5;</code>
     *
     * <pre>
     *头像id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadBytes() {
      java.lang.Object ref = head_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        head_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 level = 6;
    public static final int LEVEL_FIELD_NUMBER = 6;
    private int level_;
    /**
     * <code>optional uint32 level = 6;</code>
     *
     * <pre>
     *角色等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 level = 6;</code>
     *
     * <pre>
     *角色等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // optional uint32 exp = 7;
    public static final int EXP_FIELD_NUMBER = 7;
    private int exp_;
    /**
     * <code>optional uint32 exp = 7;</code>
     *
     * <pre>
     *角色经验
     * </pre>
     */
    public boolean hasExp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 exp = 7;</code>
     *
     * <pre>
     *角色经验
     * </pre>
     */
    public int getExp() {
      return exp_;
    }

    // optional uint32 phypower = 8;
    public static final int PHYPOWER_FIELD_NUMBER = 8;
    private int phypower_;
    /**
     * <code>optional uint32 phypower = 8;</code>
     *
     * <pre>
     *物理攻击
     * </pre>
     */
    public boolean hasPhypower() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 phypower = 8;</code>
     *
     * <pre>
     *物理攻击
     * </pre>
     */
    public int getPhypower() {
      return phypower_;
    }

    // optional uint32 leadership = 9;
    public static final int LEADERSHIP_FIELD_NUMBER = 9;
    private int leadership_;
    /**
     * <code>optional uint32 leadership = 9;</code>
     *
     * <pre>
     *领导标记
     * </pre>
     */
    public boolean hasLeadership() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 leadership = 9;</code>
     *
     * <pre>
     *领导标记
     * </pre>
     */
    public int getLeadership() {
      return leadership_;
    }

    // optional uint32 friendnum = 10;
    public static final int FRIENDNUM_FIELD_NUMBER = 10;
    private int friendnum_;
    /**
     * <code>optional uint32 friendnum = 10;</code>
     *
     * <pre>
     *朋友数量
     * </pre>
     */
    public boolean hasFriendnum() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 friendnum = 10;</code>
     *
     * <pre>
     *朋友数量
     * </pre>
     */
    public int getFriendnum() {
      return friendnum_;
    }

    // optional uint32 gamecoin = 11;
    public static final int GAMECOIN_FIELD_NUMBER = 11;
    private int gamecoin_;
    /**
     * <code>optional uint32 gamecoin = 11;</code>
     *
     * <pre>
     *游戏货币
     * </pre>
     */
    public boolean hasGamecoin() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 gamecoin = 11;</code>
     *
     * <pre>
     *游戏货币
     * </pre>
     */
    public int getGamecoin() {
      return gamecoin_;
    }

    // optional uint32 diamond = 12;
    public static final int DIAMOND_FIELD_NUMBER = 12;
    private int diamond_;
    /**
     * <code>optional uint32 diamond = 12;</code>
     *
     * <pre>
     *钻石数量
     * </pre>
     */
    public boolean hasDiamond() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 diamond = 12;</code>
     *
     * <pre>
     *钻石数量
     * </pre>
     */
    public int getDiamond() {
      return diamond_;
    }

    private void initFields() {
      uaid_ = 0;
      charid_ = 0;
      kind_ = 0;
      name_ = "";
      head_ = "";
      level_ = 0;
      exp_ = 0;
      phypower_ = 0;
      leadership_ = 0;
      friendnum_ = 0;
      gamecoin_ = 0;
      diamond_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, uaid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, charid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, kind_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getHeadBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, level_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, exp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, phypower_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, leadership_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, friendnum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, gamecoin_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, diamond_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, uaid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, charid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, kind_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getHeadBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, level_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, exp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, phypower_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, leadership_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, friendnum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, gamecoin_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, diamond_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.Message.msgcharinfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.Message.msgcharinfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.Message.msgcharinfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.Message.msgcharinfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.Message.msgcharinfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.Message.msgcharinfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.Message.msgcharinfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.Message.msgcharinfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.Message.msgcharinfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.Message.msgcharinfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.Message.msgcharinfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code msgcharinfo}
     *
     * <pre>
     *角色信息结构
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.Message.msgcharinfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.Message.internal_static_msgcharinfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.Message.internal_static_msgcharinfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.Message.msgcharinfo.class, protobuf.Message.msgcharinfo.Builder.class);
      }

      // Construct using protobuf.Message.msgcharinfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uaid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        charid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        kind_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        head_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        exp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        phypower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        leadership_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        friendnum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        gamecoin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        diamond_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.Message.internal_static_msgcharinfo_descriptor;
      }

      public protobuf.Message.msgcharinfo getDefaultInstanceForType() {
        return protobuf.Message.msgcharinfo.getDefaultInstance();
      }

      public protobuf.Message.msgcharinfo build() {
        protobuf.Message.msgcharinfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.Message.msgcharinfo buildPartial() {
        protobuf.Message.msgcharinfo result = new protobuf.Message.msgcharinfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uaid_ = uaid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.charid_ = charid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.head_ = head_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.exp_ = exp_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.phypower_ = phypower_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.leadership_ = leadership_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.friendnum_ = friendnum_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.gamecoin_ = gamecoin_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.diamond_ = diamond_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.Message.msgcharinfo) {
          return mergeFrom((protobuf.Message.msgcharinfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.Message.msgcharinfo other) {
        if (other == protobuf.Message.msgcharinfo.getDefaultInstance()) return this;
        if (other.hasUaid()) {
          setUaid(other.getUaid());
        }
        if (other.hasCharid()) {
          setCharid(other.getCharid());
        }
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000008;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasHead()) {
          bitField0_ |= 0x00000010;
          head_ = other.head_;
          onChanged();
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasExp()) {
          setExp(other.getExp());
        }
        if (other.hasPhypower()) {
          setPhypower(other.getPhypower());
        }
        if (other.hasLeadership()) {
          setLeadership(other.getLeadership());
        }
        if (other.hasFriendnum()) {
          setFriendnum(other.getFriendnum());
        }
        if (other.hasGamecoin()) {
          setGamecoin(other.getGamecoin());
        }
        if (other.hasDiamond()) {
          setDiamond(other.getDiamond());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.Message.msgcharinfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.Message.msgcharinfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 uaid = 1;
      private int uaid_ ;
      /**
       * <code>optional uint32 uaid = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public boolean hasUaid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 uaid = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public int getUaid() {
        return uaid_;
      }
      /**
       * <code>optional uint32 uaid = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public Builder setUaid(int value) {
        bitField0_ |= 0x00000001;
        uaid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 uaid = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public Builder clearUaid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uaid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 charid = 2;
      private int charid_ ;
      /**
       * <code>optional uint32 charid = 2;</code>
       *
       * <pre>
       *角色id
       * </pre>
       */
      public boolean hasCharid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 charid = 2;</code>
       *
       * <pre>
       *角色id
       * </pre>
       */
      public int getCharid() {
        return charid_;
      }
      /**
       * <code>optional uint32 charid = 2;</code>
       *
       * <pre>
       *角色id
       * </pre>
       */
      public Builder setCharid(int value) {
        bitField0_ |= 0x00000002;
        charid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 charid = 2;</code>
       *
       * <pre>
       *角色id
       * </pre>
       */
      public Builder clearCharid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        charid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 kind = 3;
      private int kind_ ;
      /**
       * <code>optional uint32 kind = 3;</code>
       *
       * <pre>
       *角色种类
       * </pre>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 kind = 3;</code>
       *
       * <pre>
       *角色种类
       * </pre>
       */
      public int getKind() {
        return kind_;
      }
      /**
       * <code>optional uint32 kind = 3;</code>
       *
       * <pre>
       *角色种类
       * </pre>
       */
      public Builder setKind(int value) {
        bitField0_ |= 0x00000004;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 kind = 3;</code>
       *
       * <pre>
       *角色种类
       * </pre>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000004);
        kind_ = 0;
        onChanged();
        return this;
      }

      // optional string name = 4;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 4;</code>
       *
       * <pre>
       *角色名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string name = 4;</code>
       *
       * <pre>
       *角色名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 4;</code>
       *
       * <pre>
       *角色名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 4;</code>
       *
       * <pre>
       *角色名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 4;</code>
       *
       * <pre>
       *角色名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 4;</code>
       *
       * <pre>
       *角色名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }

      // optional string head = 5;
      private java.lang.Object head_ = "";
      /**
       * <code>optional string head = 5;</code>
       *
       * <pre>
       *头像id
       * </pre>
       */
      public boolean hasHead() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string head = 5;</code>
       *
       * <pre>
       *头像id
       * </pre>
       */
      public java.lang.String getHead() {
        java.lang.Object ref = head_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          head_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string head = 5;</code>
       *
       * <pre>
       *头像id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadBytes() {
        java.lang.Object ref = head_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          head_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string head = 5;</code>
       *
       * <pre>
       *头像id
       * </pre>
       */
      public Builder setHead(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        head_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string head = 5;</code>
       *
       * <pre>
       *头像id
       * </pre>
       */
      public Builder clearHead() {
        bitField0_ = (bitField0_ & ~0x00000010);
        head_ = getDefaultInstance().getHead();
        onChanged();
        return this;
      }
      /**
       * <code>optional string head = 5;</code>
       *
       * <pre>
       *头像id
       * </pre>
       */
      public Builder setHeadBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        head_ = value;
        onChanged();
        return this;
      }

      // optional uint32 level = 6;
      private int level_ ;
      /**
       * <code>optional uint32 level = 6;</code>
       *
       * <pre>
       *角色等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 level = 6;</code>
       *
       * <pre>
       *角色等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional uint32 level = 6;</code>
       *
       * <pre>
       *角色等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000020;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 level = 6;</code>
       *
       * <pre>
       *角色等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        level_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 exp = 7;
      private int exp_ ;
      /**
       * <code>optional uint32 exp = 7;</code>
       *
       * <pre>
       *角色经验
       * </pre>
       */
      public boolean hasExp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 exp = 7;</code>
       *
       * <pre>
       *角色经验
       * </pre>
       */
      public int getExp() {
        return exp_;
      }
      /**
       * <code>optional uint32 exp = 7;</code>
       *
       * <pre>
       *角色经验
       * </pre>
       */
      public Builder setExp(int value) {
        bitField0_ |= 0x00000040;
        exp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 exp = 7;</code>
       *
       * <pre>
       *角色经验
       * </pre>
       */
      public Builder clearExp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        exp_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 phypower = 8;
      private int phypower_ ;
      /**
       * <code>optional uint32 phypower = 8;</code>
       *
       * <pre>
       *物理攻击
       * </pre>
       */
      public boolean hasPhypower() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 phypower = 8;</code>
       *
       * <pre>
       *物理攻击
       * </pre>
       */
      public int getPhypower() {
        return phypower_;
      }
      /**
       * <code>optional uint32 phypower = 8;</code>
       *
       * <pre>
       *物理攻击
       * </pre>
       */
      public Builder setPhypower(int value) {
        bitField0_ |= 0x00000080;
        phypower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 phypower = 8;</code>
       *
       * <pre>
       *物理攻击
       * </pre>
       */
      public Builder clearPhypower() {
        bitField0_ = (bitField0_ & ~0x00000080);
        phypower_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 leadership = 9;
      private int leadership_ ;
      /**
       * <code>optional uint32 leadership = 9;</code>
       *
       * <pre>
       *领导标记
       * </pre>
       */
      public boolean hasLeadership() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 leadership = 9;</code>
       *
       * <pre>
       *领导标记
       * </pre>
       */
      public int getLeadership() {
        return leadership_;
      }
      /**
       * <code>optional uint32 leadership = 9;</code>
       *
       * <pre>
       *领导标记
       * </pre>
       */
      public Builder setLeadership(int value) {
        bitField0_ |= 0x00000100;
        leadership_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 leadership = 9;</code>
       *
       * <pre>
       *领导标记
       * </pre>
       */
      public Builder clearLeadership() {
        bitField0_ = (bitField0_ & ~0x00000100);
        leadership_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 friendnum = 10;
      private int friendnum_ ;
      /**
       * <code>optional uint32 friendnum = 10;</code>
       *
       * <pre>
       *朋友数量
       * </pre>
       */
      public boolean hasFriendnum() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 friendnum = 10;</code>
       *
       * <pre>
       *朋友数量
       * </pre>
       */
      public int getFriendnum() {
        return friendnum_;
      }
      /**
       * <code>optional uint32 friendnum = 10;</code>
       *
       * <pre>
       *朋友数量
       * </pre>
       */
      public Builder setFriendnum(int value) {
        bitField0_ |= 0x00000200;
        friendnum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 friendnum = 10;</code>
       *
       * <pre>
       *朋友数量
       * </pre>
       */
      public Builder clearFriendnum() {
        bitField0_ = (bitField0_ & ~0x00000200);
        friendnum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 gamecoin = 11;
      private int gamecoin_ ;
      /**
       * <code>optional uint32 gamecoin = 11;</code>
       *
       * <pre>
       *游戏货币
       * </pre>
       */
      public boolean hasGamecoin() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 gamecoin = 11;</code>
       *
       * <pre>
       *游戏货币
       * </pre>
       */
      public int getGamecoin() {
        return gamecoin_;
      }
      /**
       * <code>optional uint32 gamecoin = 11;</code>
       *
       * <pre>
       *游戏货币
       * </pre>
       */
      public Builder setGamecoin(int value) {
        bitField0_ |= 0x00000400;
        gamecoin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gamecoin = 11;</code>
       *
       * <pre>
       *游戏货币
       * </pre>
       */
      public Builder clearGamecoin() {
        bitField0_ = (bitField0_ & ~0x00000400);
        gamecoin_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 diamond = 12;
      private int diamond_ ;
      /**
       * <code>optional uint32 diamond = 12;</code>
       *
       * <pre>
       *钻石数量
       * </pre>
       */
      public boolean hasDiamond() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 diamond = 12;</code>
       *
       * <pre>
       *钻石数量
       * </pre>
       */
      public int getDiamond() {
        return diamond_;
      }
      /**
       * <code>optional uint32 diamond = 12;</code>
       *
       * <pre>
       *钻石数量
       * </pre>
       */
      public Builder setDiamond(int value) {
        bitField0_ |= 0x00000800;
        diamond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 diamond = 12;</code>
       *
       * <pre>
       *钻石数量
       * </pre>
       */
      public Builder clearDiamond() {
        bitField0_ = (bitField0_ & ~0x00000800);
        diamond_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:msgcharinfo)
    }

    static {
      defaultInstance = new msgcharinfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:msgcharinfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_msgcharinfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_msgcharinfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rmessage.proto\"\315\001\n\013msgcharinfo\022\014\n\004uaid\030" +
      "\001 \001(\r\022\016\n\006charid\030\002 \001(\r\022\014\n\004kind\030\003 \001(\r\022\014\n\004n" +
      "ame\030\004 \001(\t\022\014\n\004head\030\005 \001(\t\022\r\n\005level\030\006 \001(\r\022\013" +
      "\n\003exp\030\007 \001(\r\022\020\n\010phypower\030\010 \001(\r\022\022\n\nleaders" +
      "hip\030\t \001(\r\022\021\n\tfriendnum\030\n \001(\r\022\020\n\010gamecoin" +
      "\030\013 \001(\r\022\017\n\007diamond\030\014 \001(\rB\n\n\010protobuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_msgcharinfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_msgcharinfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_msgcharinfo_descriptor,
              new java.lang.String[] { "Uaid", "Charid", "Kind", "Name", "Head", "Level", "Exp", "Phypower", "Leadership", "Friendnum", "Gamecoin", "Diamond", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
